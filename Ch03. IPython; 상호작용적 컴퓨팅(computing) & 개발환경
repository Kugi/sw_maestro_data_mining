<Ipython 기초>
  Python 개발 환경 -> Ipython과 텍스트 에디터(text editor)
  왜 IPython인가? 이것은 통합적인 개발 환경을 갖는다.(It's Intergrated Development Environment(IDE))
                  - 고급의 그래픽 툴을 갖는다.
                  - 완벽한 편집능력을 갖는다.
  
  Ipython -> Python Shell
          -> Rich GUI Console
          -> Web-based interactive Notebook format
          -> 가볍고, 빠르게 병렬적인 컴퓨터 엔진을 갖는다.
          
  ex coding> 
    - Ipython과 Python의 완벽한 연계동작
    - data = {i : randn() for i in range(7)}
        data 저장, i = [0: 7]에서 각 각의 i에 대응하는 임의의 수를 저장한다. 
        randn()을 실제로 사용하는 방법 : 
          import numpy
          numpy.random.randn() #임의의 수 출력
          numpy.random.randn(x, y) #x행 y열의 임의 원소의 배열 생성
          
          
<Tab Completion>
탭을 사용한 완성기능.

Ipython shell을 보면 표면적으로 상호작용적인 파이썬의 인터프린터(interpreter)와 다소 다르게 보일 수 있다.
Mathematica한 사용자는 길게 열거되어지는 입력과 출력을 친숙하게 표기할 수 있다.(나타날 수 있다. 마치 자동 탭 완성처럼)

쉘 표현식은 입력 도중에 <Tab>키를 누름으로써 지금까지 입력한 문자에 일치하는 변수(객체, 함수 등) 네임 스페이스들을 검색한다.

ex coding>
- 당신이 입력한 문자에 일치하는 네임 스페이스들을 검색

- 타이핑 하기 전에 djEJ한 객체에 해당하는 함수들(methods)을 자동으로 완성한다.

- 모듈(modules)에 대해서도 동일하게 완성한다.

(!!!!매우 도움이 될 듯, 특히 windows에서의 개발환경에서... p63 예제코드 꼭 쳐볼 것)
- 탭 완성 대화형 네임스페이스를 검색하고, 객체나 파일 경로(심지어는 파이썬 문자열)
과 같은 모듈, 당신이 타이핑한것과 이리하는 컴퓨터 시스템 파일에 대한 어떠한 것도 완성한다

- %run 명려와와 함께 혼동하여 사용하면, 이 기능이 의심할 것 없이 당신의 키 타이핑을 확실히 줄어 줄 것이다.(다음 섹션에서 보자)


<내성(Introspection) - ?와 ??마크>
- 변수 뒤나 앞에 ?마크를 사용하면 객체에 대한 일반적인 정보를 보여준다.
ex coding>
b = [1, 2, 3]일 때,
In[] :　b?
Type: list
string Form : [1, 2, 3]
.
.
.
Docstring:
~~
~~
(꼭 한번 쳐보고, 출력 결과와 특히 Docstring을 확인해봐용~)

이것은 객체내성(object introspection)이라고 한다. 

- 만약에 객체가 함수이거나 일시적인 함수(instance method)인 경우, "the docstring"이 정의 되어져인 있는 경우 함께 정보를 보여준다. 다음과 같이 함수를 정의해서 확인해 보자.
ex coding>
def add_numbers(a, b):
  """ 
	Add two numbers together
	... 큰따음표 3개로 docstring을 정의한다!!!! ...
	-----------------------------------
	"""
	return a + b
?를 사용해서 직접 돌려보고 docstring 부분을 확인해 봐라.

- ??마트는 가능하다면 함수의 소스코드를 함께 볼 수 있다. 위에서 정의한 add_numbers(a, b)를 직접 돌려봐라.
ex coding>
add_number??

(!!!이것도 매우 자주 쓰이는 사용입니다 특히나 *기능에 대해서 직접 해보세요 page 64)
- ?의 마지막 사용 영역, 이것은 유사한 표준 UNIX또는 Windows 명령 line에 대한 방식의 IPython namespace를 찾는데 도움을 준다! "wildcard(*)“를 섞은 문자열을 검색하면 이와 동일한 모든 이름들을 보여준다!!!! 
In[] : np.*load*?
